[{"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\index.js":"1","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\App.js":"2","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\admin\\admin.jsx":"3","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\login\\login.jsx":"4","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\api\\index.js":"5","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\api\\ajax.js":"6","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\utils\\memoryUtil.js":"7","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\utils\\storageUtils.js":"8","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\components\\left-nav\\left-nav.jsx":"9","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\components\\header\\header.jsx":"10","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\home\\home.jsx":"11","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\product.jsx":"12","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\category\\category.jsx":"13","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\user\\user.jsx":"14","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\charts\\bar.jsx":"15","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\charts\\line.jsx":"16","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\role\\role.jsx":"17","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\charts\\pie.jsx":"18","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\config\\menuConfig.js":"19","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\utils\\dataUtils.js":"20","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\components\\link-button\\link-button.jsx":"21","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\category\\add-form.jsx":"22","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\category\\update-form.jsx":"23","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\home.jsx":"24","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\add-update.jsx":"25","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\detail.jsx":"26","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\utils\\constants.js":"27","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\pictures-wall.jsx":"28","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\rich-text-editor.jsx":"29","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\role\\add-form.jsx":"30","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\role\\auth-form.jsx":"31","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\user\\user-form.jsx":"32","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\redux\\store.js":"33","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\redux\\reducer.js":"34","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\redux\\action-types.js":"35","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\redux\\actions.js":"36","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\not-found\\not-found.jsx":"37","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\index.js":"38","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\App.js":"39","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\redux\\store.js":"40","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\redux\\reducer.js":"41","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\login\\login.jsx":"42","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\admin\\admin.jsx":"43","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\redux\\action-types.js":"44","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\utils\\storageUtils.js":"45","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\redux\\actions.js":"46","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\home\\home.jsx":"47","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\category\\category.jsx":"48","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\charts\\bar.jsx":"49","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\product\\product.jsx":"50","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\charts\\line.jsx":"51","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\user\\user.jsx":"52","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\role\\role.jsx":"53","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\charts\\pie.jsx":"54","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\not-found\\not-found.jsx":"55","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\components\\left-nav\\left-nav.jsx":"56","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\components\\header\\header.jsx":"57","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\utils\\dataUtils.js":"58","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\utils\\constants.js":"59","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\config\\menuConfig.js":"60","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\category\\update-form.jsx":"61","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\category\\add-form.jsx":"62","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\product\\home.jsx":"63","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\product\\add-update.jsx":"64","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\product\\detail.jsx":"65","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\utils\\memoryUtil.js":"66","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\role\\auth-form.jsx":"67","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\components\\link-button\\link-button.jsx":"68","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\role\\add-form.jsx":"69","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\api\\index.js":"70","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\user\\user-form.jsx":"71","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\api\\ajax.js":"72","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\product\\pictures-wall.jsx":"73","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\product\\rich-text-editor.jsx":"74","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\cart\\cart.jsx":"75","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\cart\\pathCart.jsx":"76","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\cart\\cartPay.jsx":"77"},{"size":310,"mtime":1614585873585,"results":"78","hashOfConfig":"79"},{"size":523,"mtime":1614739330967,"results":"80","hashOfConfig":"79"},{"size":1999,"mtime":1614738770912,"results":"81","hashOfConfig":"79"},{"size":4194,"mtime":1614590642410,"results":"82","hashOfConfig":"79"},{"size":3245,"mtime":1612426884170,"results":"83","hashOfConfig":"79"},{"size":787,"mtime":1611309883466,"results":"84","hashOfConfig":"79"},{"size":158,"mtime":1614739445500,"results":"85","hashOfConfig":"79"},{"size":386,"mtime":1611379871063,"results":"86","hashOfConfig":"79"},{"size":3505,"mtime":1614586025683,"results":"87","hashOfConfig":"79"},{"size":2796,"mtime":1614587205992,"results":"88","hashOfConfig":"79"},{"size":235,"mtime":1611544863272,"results":"89","hashOfConfig":"79"},{"size":633,"mtime":1611740870510,"results":"90","hashOfConfig":"79"},{"size":6986,"mtime":1611662738940,"results":"91","hashOfConfig":"79"},{"size":4337,"mtime":1612427761938,"results":"92","hashOfConfig":"79"},{"size":1433,"mtime":1614670635910,"results":"93","hashOfConfig":"79"},{"size":1436,"mtime":1614673454728,"results":"94","hashOfConfig":"79"},{"size":5376,"mtime":1614586594828,"results":"95","hashOfConfig":"79"},{"size":3426,"mtime":1614673567656,"results":"96","hashOfConfig":"79"},{"size":1071,"mtime":1611404107986,"results":"97","hashOfConfig":"79"},{"size":344,"mtime":1611480367461,"results":"98","hashOfConfig":"79"},{"size":182,"mtime":1611497594799,"results":"99","hashOfConfig":"79"},{"size":1459,"mtime":1611662827312,"results":"100","hashOfConfig":"79"},{"size":972,"mtime":1611662307394,"results":"101","hashOfConfig":"79"},{"size":5385,"mtime":1614739642856,"results":"102","hashOfConfig":"79"},{"size":8454,"mtime":1614739874126,"results":"103","hashOfConfig":"79"},{"size":3555,"mtime":1614739881660,"results":"104","hashOfConfig":"79"},{"size":125,"mtime":1611801515830,"results":"105","hashOfConfig":"79"},{"size":3651,"mtime":1611993138998,"results":"106","hashOfConfig":"79"},{"size":2575,"mtime":1612075921052,"results":"107","hashOfConfig":"79"},{"size":1055,"mtime":1612149506248,"results":"108","hashOfConfig":"79"},{"size":2101,"mtime":1612249218086,"results":"109","hashOfConfig":"79"},{"size":2460,"mtime":1612427170507,"results":"110","hashOfConfig":"79"},{"size":324,"mtime":1614568078153,"results":"111","hashOfConfig":"79"},{"size":969,"mtime":1614586882110,"results":"112","hashOfConfig":"79"},{"size":241,"mtime":1614585386223,"results":"113","hashOfConfig":"79"},{"size":1423,"mtime":1614585564058,"results":"114","hashOfConfig":"79"},{"size":862,"mtime":1614738619445,"results":"115","hashOfConfig":"79"},{"size":294,"mtime":1614762142000,"results":"116","hashOfConfig":"117"},{"size":502,"mtime":1614762142000,"results":"118","hashOfConfig":"117"},{"size":312,"mtime":1614762142000,"results":"119","hashOfConfig":"117"},{"size":915,"mtime":1614762142000,"results":"120","hashOfConfig":"117"},{"size":4048,"mtime":1618879923278,"results":"121","hashOfConfig":"117"},{"size":2178,"mtime":1619923835355,"results":"122","hashOfConfig":"117"},{"size":234,"mtime":1614762142000,"results":"123","hashOfConfig":"117"},{"size":358,"mtime":1614762142000,"results":"124","hashOfConfig":"117"},{"size":1366,"mtime":1614762142000,"results":"125","hashOfConfig":"117"},{"size":223,"mtime":1618028118488,"results":"126","hashOfConfig":"117"},{"size":6515,"mtime":1619000406856,"results":"127","hashOfConfig":"117"},{"size":2476,"mtime":1620830755063,"results":"128","hashOfConfig":"117"},{"size":613,"mtime":1614762142000,"results":"129","hashOfConfig":"117"},{"size":1358,"mtime":1620802771339,"results":"130","hashOfConfig":"117"},{"size":4205,"mtime":1619056359122,"results":"131","hashOfConfig":"117"},{"size":5142,"mtime":1614762142000,"results":"132","hashOfConfig":"117"},{"size":3287,"mtime":1614762142000,"results":"133","hashOfConfig":"117"},{"size":822,"mtime":1614762142000,"results":"134","hashOfConfig":"117"},{"size":3334,"mtime":1618879851969,"results":"135","hashOfConfig":"117"},{"size":2723,"mtime":1619341156880,"results":"136","hashOfConfig":"117"},{"size":545,"mtime":1617848364571,"results":"137","hashOfConfig":"117"},{"size":118,"mtime":1614762142000,"results":"138","hashOfConfig":"117"},{"size":1123,"mtime":1620830836958,"results":"139","hashOfConfig":"117"},{"size":927,"mtime":1614762142000,"results":"140","hashOfConfig":"117"},{"size":1398,"mtime":1614762142000,"results":"141","hashOfConfig":"117"},{"size":5726,"mtime":1619602729113,"results":"142","hashOfConfig":"117"},{"size":8328,"mtime":1619606816075,"results":"143","hashOfConfig":"117"},{"size":3428,"mtime":1614762142000,"results":"144","hashOfConfig":"117"},{"size":151,"mtime":1614762142000,"results":"145","hashOfConfig":"117"},{"size":2006,"mtime":1614762142000,"results":"146","hashOfConfig":"117"},{"size":176,"mtime":1614762142000,"results":"147","hashOfConfig":"117"},{"size":1010,"mtime":1614762142000,"results":"148","hashOfConfig":"117"},{"size":3806,"mtime":1619694891910,"results":"149","hashOfConfig":"117"},{"size":2365,"mtime":1614762142000,"results":"150","hashOfConfig":"117"},{"size":757,"mtime":1614762142000,"results":"151","hashOfConfig":"117"},{"size":3524,"mtime":1614762142000,"results":"152","hashOfConfig":"117"},{"size":2486,"mtime":1614762142000,"results":"153","hashOfConfig":"117"},{"size":4470,"mtime":1620814962114,"results":"154","hashOfConfig":"117"},{"size":455,"mtime":1619923564782,"results":"155","hashOfConfig":"117"},{"size":5741,"mtime":1619949287090,"results":"156","hashOfConfig":"117"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},"gje5x7",{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"159"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"159"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"159"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"159"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"159"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"159"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"159"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"159"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"159"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},"121e6xu",{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"243"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"243"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"243"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"243"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"243"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"243"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"243"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"243"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"243"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"243"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"243"},"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\index.js",[],["333","334"],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\App.js",["335"],"import React, {Component} from 'react'\r\n// import {Button,message} from 'antd'\r\nimport {BrowserRouter,HashRouter,Route,Switch} from 'react-router-dom'\r\n\r\nimport Login from './pages/login/login'\r\nimport Admin from './pages/admin/admin'\r\n\r\nexport default class App extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route path='/login' component={Login} ></Route>\r\n          <Route path='/' component={Admin} ></Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\admin\\admin.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\login\\login.jsx",["336","337"],"import React, {Component} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {\r\n  Form,\r\n  Input,\r\n  Icon,\r\n  Button,\r\n  message\r\n} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport logo from '../../assets/images/logo.png'\r\nimport './login.less'\r\nimport {login} from \"../../redux/actions\";\r\n\r\nconst Item = Form.Item\r\n\r\n/*\r\n* 登陆界面\r\n* */\r\nclass Login extends Component {\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    this.props.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        // console.log('发送ajax请求',values);\r\n        //请求登陆\r\n        const {username, password} = values\r\n\r\n        this.props.login(username,password)\r\n\r\n      } else {\r\n        console.log('校验失败');\r\n      }\r\n    })\r\n    // // 得到form对象\r\n    // const form = this.props.form\r\n    // // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  }\r\n  //自定义校验\r\n  /*\r\n  用户名/密码的的合法性要求\r\n  1). 必须输入\r\n  2). 必须大于等于 4 位\r\n  3). 必须小于等于 12 位\r\n  4). 必须是英文、数字或下划线组成\r\n*/\r\n  validatePwd = (rule, value, callback) => {\r\n    if (!value) {\r\n      callback('请输入密码...')\r\n    } else if (value.length < 4) {\r\n      callback('密码长度不能小于4...')\r\n    } else if (value.length > 12) {\r\n      callback('密码长度不能大于12...')\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback('密码必须是数字、字母、下划线...')\r\n    } else {\r\n      callback()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //验证是否已经登录\r\n    const user = this.props.user\r\n    if (user && user._id) {\r\n      return <Redirect to='/home'/>\r\n    }\r\n\r\n    const errorMsg=this.props.user.errorMsg\r\n\r\n    const form = this.props.form\r\n    const {getFieldDecorator} = form\r\n    return (\r\n      <div className='login'>\r\n        <header className='login-header'>\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>React 项目: 杂货管理系统</h1>\r\n        </header>\r\n        <section className='login-content'>\r\n          <div className={user.errorMsg ? 'error-msg show' : 'error-msg'}>{user.errorMsg}</div>\r\n          <h3>用户登陆</h3>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {\r\n                getFieldDecorator('username', { // 配置对象: 属性名是特定的一些名称\r\n                  // 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                  rules: [\r\n                    {required: true, whitespace: true, message: '用户名必须输入'},\r\n                    {min: 4, message: '用户名至少4位'},\r\n                    {max: 12, message: '用户名最多12位'},\r\n                    {pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成'},\r\n                  ],\r\n                  initialValue:'admin'\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                    placeholder=\"用户名\"\r\n                  />\r\n                )\r\n              }\r\n            </Item>\r\n            <Item>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  rules: [\r\n                    {\r\n                      validator: this.validatePwd\r\n                    }\r\n                  ],\r\n                  initialValue: 'admin'\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                  />\r\n                )\r\n              }\r\n            </Item>\r\n            <Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                登录\r\n              </Button>\r\n            </Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrapLogin = Form.create()(Login)\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {login}\r\n)(WrapLogin)\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\api\\index.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\api\\ajax.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\utils\\memoryUtil.js",["338"],"/*\r\n用来在内存保存一些数据的工具模块\r\n */\r\nexport default {\r\n  user: {} , //保存当前的user\r\n  product:{}  //保存指定商品对象\r\n}\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\utils\\storageUtils.js",["339"],"/*\r\n* 进行local数据存储保存\r\n* */\r\nimport store from 'store'\r\n\r\nconst USER_KEY = 'user_key'\r\n\r\nexport default {\r\n  /**\r\n   * 保存user\r\n   */\r\n  saveUser(user) {\r\n    store.set(USER_KEY, user)\r\n  },\r\n\r\n  /**\r\n   * 读取user\r\n   */\r\n  getUser() {\r\n    return store.get(USER_KEY) || {}\r\n  },\r\n  /**\r\n   * 删除user\r\n   */\r\n  removeUser() {\r\n    store.remove(USER_KEY)\r\n  }\r\n}\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\components\\left-nav\\left-nav.jsx",["340","341"],"import React, {Component} from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport {Menu, Icon} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport './left-nav.less'\r\nimport logo from '../../assets/images/logo.png'\r\nimport menuList from '../../config/menuConfig'\r\nimport memoryUtil from '../../utils/memoryUtil'\r\nimport {setHeadTitle} from '../../redux/actions'\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nclass LeftNav extends Component {\r\n\r\n  getMenuNodes = (menuList) => {\r\n    const path = this.props.location.pathname\r\n\r\n    return menuList.map(item => {\r\n      // 如果当前用户有item对应的权限, 才需要显示对应菜单项\r\n      if (this.hasAuth(item)) {\r\n        if (!item.children) {\r\n          if (item.key === path || path.indexOf(item.key) === 0) {\r\n            //更新headTitle状态\r\n            this.props.setHeadTitle(item.title)\r\n          }\r\n          return (\r\n            <Menu.Item key={item.key}>\r\n              <Link to={item.key} onClick={() => this.props.setHeadTitle(item.title)}>\r\n                <Icon type={item.icon}></Icon>\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          )\r\n        } else {\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0)\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            this.openKey = item.key\r\n          }\r\n          return (\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                <Icon type={item.icon}></Icon>\r\n                <span>{item.title}</span>\r\n              </span>\r\n              }\r\n            >\r\n              {this.getMenuNodes(item.children)}\r\n            </SubMenu>\r\n          )\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 查询item是否有权限\r\n   */\r\n  hasAuth = (item) => {\r\n    const {key, isPublic} = item\r\n\r\n    const menus = this.props.user.role.menus\r\n    const username = this.props.user.username\r\n\r\n    // 1. 如果当前用户是admin\r\n    // 2. 如果当前item是公开的\r\n    // 3. 当前用户有此item的权限: key有没有menus中\r\n\r\n    if (username === 'admin' || isPublic || menus.indexOf(key) !== -1) {\r\n      return true\r\n    } else if (item.children) { // 4. 如果当前用户有此item的某个子item的权限\r\n      return !!item.children.find(child => menus.indexOf(child.key) !== -1)\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.menuNodes = this.getMenuNodes(menuList)\r\n  }\r\n\r\n  render() {\r\n    let path = this.props.location.pathname\r\n\r\n    if (path.indexOf('/product') === 0) { // 当前请求的是商品或其子路由界面\r\n      path = '/product'\r\n    }\r\n\r\n    // 得到需要打开菜单项的key\r\n    const openKey = this.openKey\r\n    return (\r\n      <div className='left-nav'>\r\n        <Link to='/' className='left-nav-header'>\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>杂货管理</h1>\r\n        </Link>\r\n        <Menu\r\n          mode='inline'\r\n          theme='dark'\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n        >\r\n          {\r\n            this.menuNodes\r\n          }\r\n\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n* withRouter\r\n* 包装非路由组件获取三个值   history location match\r\n* */\r\nexport default connect(\r\n  state => ({user:state.user}),\r\n  {setHeadTitle}\r\n)(withRouter(LeftNav))\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\components\\header\\header.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\home\\home.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\product.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\category\\category.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\user\\user.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\charts\\bar.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\charts\\line.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\role\\role.jsx",["342"],"import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {PAGE_SIZE} from '../../utils/constants'\r\nimport {reqRoles, reqAddRole, reqUpdateRole} from '../../api'\r\nimport AddForm from \"./add-form\";\r\nimport AuthForm from './auth-form'\r\nimport {formateDate} from '../../utils/dataUtils'\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nimport {logout} from \"../../redux/actions\";\r\n\r\nclass Role extends Component {\r\n  state = {\r\n    roles: [],  //所有角色列表\r\n    role: {},  //选中的role\r\n    isShowAdd: false,//是否显示添加界面\r\n    isShowAuth: false,//是否显示更新界面\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.auth = React.createRef()\r\n  }\r\n\r\n  /**\r\n   * 初始化列\r\n   */\r\n  initColumn = () => {\r\n    this.columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name'\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        render: (auth_time) => formateDate(auth_time)\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name'\r\n      },\r\n    ]\r\n    // console.log(this.state.roles[0].name, this.state.roles[0].create_time);\r\n    // console.log(this.state.roles[0].auth_name, this.state.roles[0].auth_time);\r\n  }\r\n\r\n  onRow = (role) => {\r\n    return {\r\n      onClick: event => {\r\n        // alert('点击行')\r\n        // console.log(role);\r\n        this.setState({\r\n          role\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取前台列表roles\r\n   */\r\n  getRoles = async () => {\r\n    const result = await reqRoles()\r\n    if (result.status === 0) {\r\n      const roles = result.data\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 添加角色\r\n   */\r\n  addRole = () => {\r\n    //表单验证\r\n    this.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        //隐藏确认框\r\n        this.setState({\r\n          isShowAdd: false\r\n        })\r\n\r\n        //  收集数据\r\n        const {roleName} = values\r\n        this.form.resetFields()\r\n        //  添加角色\r\n        const result = await reqAddRole(roleName)\r\n        //  更新列表\r\n        if (result.status === 0) {\r\n          message.success('角色添加成功')\r\n          const role = result.data\r\n\r\n          //  更新role状态：基于原本数据\r\n          this.setState(state => ({\r\n            roles: [...state.roles, role]\r\n          }))\r\n\r\n        } else {\r\n          message.error('角色添加失败')\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 更新角色\r\n   */\r\n  updateRole = async () => {\r\n    // 隐藏确认框\r\n    this.setState({\r\n      isShowAuth: false\r\n    })\r\n    const role = this.state.role\r\n    //  得到menus\r\n    const menus = this.auth.current.getMenus()\r\n    role.menus = menus\r\n    role.auth_time = Date.now()\r\n    role.auth_name = this.props.user.username\r\n\r\n    //  请求更新\r\n    const result = await reqUpdateRole(role)\r\n    if (result.status === 0) {\r\n      if (role._id === this.props.user.role_id) {\r\n        this.props.logout()\r\n        message.success('强制退出重新登录')\r\n      } else {\r\n        message.success('角色权限更新成功')\r\n        this.setState({\r\n          roles: [...this.state.roles]\r\n        })\r\n      }\r\n    } else {\r\n      message.error('添加角色失败')\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.initColumn()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRoles()\r\n  }\r\n\r\n  render() {\r\n    const {roles, role, isShowAdd, isShowAuth} = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <Button\r\n          type='primary'\r\n          style={{marginRight: '10px'}}\r\n          onClick={() => this.setState({isShowAdd: true})}\r\n        >\r\n          创建角色\r\n        </Button>\r\n        <Button\r\n          type='primary'\r\n          disabled={!role._id}\r\n          onClick={() => this.setState({isShowAuth: true})}\r\n        >\r\n          设置角色权限\r\n        </Button>\r\n      </span>\r\n    )\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: PAGE_SIZE}}\r\n          rowSelection={{\r\n            type: 'radio',\r\n            selectedRowKeys: [role._id],\r\n            onSelect: (role) => {\r\n              this.setState({role})\r\n            }\r\n          }}\r\n          onRow={this.onRow}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={isShowAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() => {\r\n            this.setState({isShowAdd: false})\r\n          }}\r\n        >\r\n\r\n          <AddForm\r\n            setForm={(form) => {\r\n              this.form = form\r\n            }}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"设置角色权限\"\r\n          visible={isShowAuth}\r\n          onOk={this.updateRole}\r\n          onCancel={() => {\r\n            this.setState({isShowAuth: false})\r\n          }}\r\n        >\r\n\r\n          <AuthForm ref={this.auth} role={role}/>\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {logout}\r\n)(Role)\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\charts\\pie.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\config\\menuConfig.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\utils\\dataUtils.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\components\\link-button\\link-button.jsx",["343"],"import React, {Component} from 'react'\r\nimport './link-button.less'\r\n\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className='link-button'></button>\r\n}\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\category\\add-form.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\category\\update-form.jsx",["344"],"import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\nclass UpdateForm extends Component {\r\n  static propTypes = {\r\n    categoryName: PropTypes.string.isRequired,\r\n    setForm: PropTypes.func.isRequired\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const {categoryName} = this.props\r\n    const {getFieldDecorator} = this.props.form\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: categoryName,\r\n              rules: [\r\n                {required: true,message:'名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(UpdateForm)\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\home.jsx",["345"],"import React, {Component} from 'react'\r\n\r\nimport {\r\n  Card,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Icon,\r\n  Table,\r\n  message\r\n} from 'antd'\r\nimport LinkButton from \"../../components/link-button/link-button\";\r\nimport {reqProducts, reqSearchProducts, reqUpdateStatus} from \"../../api\";\r\nimport {PAGE_SIZE} from \"../../utils/constants\";\r\nimport memoryUtil from \"../../utils/memoryUtil\";\r\n\r\nconst Option = Select.Option\r\n\r\n/*\r\nProduct的添加和更新的子路由组件\r\n */\r\nexport default class ProductHome extends Component {\r\n  state = {\r\n    total: 0,  //默认初始数量\r\n    products: [],\r\n    loading: false, //加载中\r\n    searchType: 'productName',//搜索的类型\r\n    searchName: '',  //搜索的名称\r\n  }\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '商品名称',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: '商品描述',\r\n        dataIndex: 'desc',\r\n      },\r\n      {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        render: (price) => '￥' + price  //指定显示的值的样式\r\n      },\r\n      {\r\n        title: '状态',\r\n        width: 100,\r\n        // dataIndex: 'status',\r\n        render: (product) => {\r\n          const {status, _id} = product\r\n          const newStatus = status === 1 ? 2 : 1\r\n          return (\r\n            <span>\r\n              <Button\r\n                type='primary'\r\n                onClick={() => this.updateStatus(_id, newStatus)}\r\n              >\r\n                {status === 1 ? '下架' : '上架'}\r\n              </Button>\r\n              <span>{status === 1 ? '在售' : '已下架'}</span>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: '操作',\r\n        width: 100,\r\n        render: (product) => {\r\n          return (\r\n            <span>\r\n              <LinkButton onClick={() => this.showDetail(product)}>详情</LinkButton>\r\n              <LinkButton onClick={() => this.showUpdate(product)}>修改</LinkButton>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * 显示商品详情页面\r\n   * @param product\r\n   */\r\n  showDetail = (product) => {\r\n    //使用缓存product对象给detail使用\r\n    memoryUtil.product = product\r\n    this.props.history.push('/product/detail')\r\n  }\r\n  /**\r\n   * 显示修改产品界面\r\n   * @param product\r\n   */\r\n  showUpdate= (product) => {\r\n    //使用缓存product对象给detail使用\r\n    memoryUtil.product = product\r\n    this.props.history.push('/product/addupdate')\r\n  }\r\n\r\n  /**\r\n   * 获取指定页码的列表数据\r\n   */\r\n  getProducts = async (pageNum) => {\r\n    this.pageNum = pageNum  //保存页面让其他方法可以使用\r\n\r\n    //发请求  中\r\n    this.setState({\r\n      loading: true\r\n    })\r\n\r\n    const {searchName, searchType} = this.state\r\n\r\n    let result\r\n    //关键字搜索  搜索分页\r\n    if (searchName) {\r\n      result = await reqSearchProducts({pageNum, pageSize: PAGE_SIZE, searchName, searchType})\r\n    } else {//一般分页\r\n      result = await reqProducts(pageNum, PAGE_SIZE)\r\n    }\r\n    //请求结束\r\n    this.setState({\r\n      loading: false\r\n    })\r\n    if (result.status === 0) {\r\n      const {total, list} = result.data\r\n      this.setState({\r\n        total,\r\n        products: list\r\n      })\r\n    }\r\n  }\r\n\r\n  //更新商品状态\r\n  updateStatus = async (productId, status) => {\r\n    const result = await reqUpdateStatus(productId, status)\r\n    if (result.status === 0) {\r\n      message.success('商品更新成功...')\r\n      this.getProducts(this.pageNum)\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProducts(1)\r\n  }\r\n\r\n  render() {\r\n    const dataSource = [\r\n      {\r\n        key: '1',\r\n        name: '胡彦斌',\r\n        age: 32,\r\n        address: '西湖区湖底公园1号',\r\n      },\r\n      {\r\n        key: '2',\r\n        name: '胡彦祖',\r\n        age: 42,\r\n        address: '西湖区湖底公园1号',\r\n      },\r\n    ];\r\n\r\n    const {products, total, loading, searchName, searchType} = this.state\r\n\r\n\r\n    const title = (\r\n      <span>\r\n        <Select\r\n          value={searchType}\r\n          style={{width: 150}}\r\n          onChange={value => this.setState({searchType: value})}\r\n        >\r\n          <Option value='productName'>按名称搜索</Option>\r\n          <Option value='productDesc'>按描述搜索</Option>\r\n        </Select>\r\n        <Input\r\n          placeholder='关键字'\r\n          style={{width: 150, margin: '0 15px'}}\r\n          value={searchName}\r\n          onChange={e => this.setState({searchName: e.target.value})}\r\n        />\r\n        <Button type='primary' onClick={() => this.getProducts(1)}>搜索</Button>\r\n      </span>\r\n    )\r\n\r\n    const extra = (\r\n      <Button type='primary' onClick={() => this.props.history.push('/product/addupdate')}>\r\n        <Icon type='plus'></Icon>\r\n        添加商品\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          rowKey='_id'\r\n          bordered\r\n          loading={loading}\r\n          dataSource={products}\r\n          columns={this.columns}\r\n          pagination={{\r\n            current: this.pageNum,\r\n            defaultPageSize: PAGE_SIZE,\r\n            showQuickJumper: true,\r\n            total,\r\n            onChange: this.getProducts\r\n          }}\r\n        />\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\add-update.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\detail.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\utils\\constants.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\pictures-wall.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\rich-text-editor.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\role\\add-form.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\role\\auth-form.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\user\\user-form.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\redux\\store.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\redux\\reducer.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\redux\\action-types.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\redux\\actions.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\not-found\\not-found.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\index.js",[],["346","347"],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\App.js",["348"],"import React, {Component} from 'react'\n// import {Button,message} from 'antd'\nimport {BrowserRouter,HashRouter,Route,Switch} from 'react-router-dom'\n\nimport Login from './pages/login/login'\nimport Admin from './pages/admin/admin'\n\nexport default class App extends Component {\n\n  render() {\n    return(\n      <HashRouter>\n        <Switch>\n          <Route path='/login' component={Login} ></Route>\n          <Route path='/' component={Admin} ></Route>\n        </Switch>\n      </HashRouter>\n    )\n  }\n}\n\n","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\redux\\store.js",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\redux\\reducer.js",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\login\\login.jsx",["349","350"],"import React, {Component} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {\n  Form,\n  Input,\n  Icon,\n  Button,\n  message\n} from 'antd'\nimport {connect} from 'react-redux'\n\nimport logo from '../../assets/images/logo1.jpg'\nimport './login.less'\nimport {login} from \"../../redux/actions\";\n\nconst Item = Form.Item\n\n/*\n* 登陆界面\n* */\nclass Login extends Component {\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    this.props.form.validateFields(async (err, values) => {\n      if (!err) {\n        // console.log('发送ajax请求',values);\n        //请求登陆\n        const {username, password} = values\n\n        this.props.login(username,password)\n\n      } else {\n        console.log('校验失败');\n      }\n    })\n    // // 得到form对象\n    // const form = this.props.form\n    // // // 获取表单项的输入数据\n    // const values = form.getFieldsValue()\n    // console.log('handleSubmit()', values)\n  }\n  //自定义校验\n  /*\n  用户名/密码的的合法性要求\n  1). 必须输入\n  2). 必须大于等于 4 位\n  3). 必须小于等于 12 位\n  4). 必须是英文、数字或下划线组成\n*/\n  validatePwd = (rule, value, callback) => {\n    if (!value) {\n      callback('请输入密码...')\n    } else if (value.length < 4) {\n      callback('密码长度不能小于4...')\n    } else if (value.length > 12) {\n      callback('密码长度不能大于12...')\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n      callback('密码必须是数字、字母、下划线...')\n    } else {\n      callback()\n    }\n  }\n\n  render() {\n    //验证是否已经登录\n    const user = this.props.user\n    if (user && user._id) {\n      return <Redirect to='/home'/>\n    }\n\n    const errorMsg=this.props.user.errorMsg\n\n    const form = this.props.form\n    const {getFieldDecorator} = form\n    return (\n      <div className='login'>\n        <header className='login-header'>\n          <img src={logo} alt=\"logo\"/>\n          <h1>校园杂货交易平台</h1>\n        </header>\n        <section className='login-content'>\n          <div className={user.errorMsg ? 'error-msg show' : 'error-msg'}>{user.errorMsg}</div>\n          <h3>用户登陆</h3>\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <Item>\n              {\n                getFieldDecorator('username', { // 配置对象: 属性名是特定的一些名称\n                  // 声明式验证: 直接使用别人定义好的验证规则进行验证\n                  rules: [\n                    {required: true, whitespace: true, message: '用户名必须输入'},\n                    {min: 4, message: '用户名至少4位'},\n                    {max: 12, message: '用户名最多12位'},\n                    {pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成'},\n                  ],\n                  initialValue:'admin'\n                })(\n                  <Input\n                    prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                    placeholder=\"用户名\"\n                  />\n                )\n              }\n            </Item>\n            <Item>\n              {\n                getFieldDecorator('password', {\n                  rules: [\n                    {\n                      validator: this.validatePwd\n                    }\n                  ],\n                  initialValue: 'admin'\n                })(\n                  <Input\n                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                    type=\"password\"\n                    placeholder=\"密码\"\n                  />\n                )\n              }\n            </Item>\n            <Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                登录\n              </Button>\n            </Item>\n          </Form>\n        </section>\n      </div>\n    )\n  }\n}\n\nconst WrapLogin = Form.create()(Login)\nexport default connect(\n  state => ({user: state.user}),\n  {login}\n)(WrapLogin)\n","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\admin\\admin.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\redux\\action-types.js",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\utils\\storageUtils.js",["351"],"/*\n* 进行local数据存储保存\n* */\nimport store from 'store'\n\nconst USER_KEY = 'user_key'\n\nexport default {\n  /**\n   * 保存user\n   */\n  saveUser(user) {\n    store.set(USER_KEY, user)\n  },\n\n  /**\n   * 读取user\n   */\n  getUser() {\n    return store.get(USER_KEY) || {}\n  },\n  /**\n   * 删除user\n   */\n  removeUser() {\n    store.remove(USER_KEY)\n  }\n}\n","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\redux\\actions.js",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\home\\home.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\category\\category.jsx",["352"],"import React, {Component} from 'react'\nimport {\n  Table,\n  Card,\n  Button,\n  Icon,\n  message,\n  Modal\n} from 'antd'\n\nimport LinkButton from '../../components/link-button/link-button'\nimport {reqCategorys, reqUpdateCategory, reqAddCategory} from '../../api'\nimport AddForm from './add-form'\nimport UpdateForm from './update-form'\nimport memoryUtil from \"../../utils/memoryUtil\"\n\nexport default class Category extends Component {\n\n  state = {\n    categorys: [],  //一级分类列表\n    subCategorys: [],  //二级分类列表\n    loading: false, //是否正在加载中\n    parentId: '0', //当前需要显示的分类列表的父类ID\n    parentName: '',  //当前显示分类列表的父类名称\n    showStatus: 0, // 标识添加/更新的确认框是否显示, 0: 都不显示, 1: 显示添加, 2: 显示更新\n    flag: true,//默认拥有权限\n  }\n\n  //初始化所有列数\n  initColumns = () => {\n    this.columns = [\n      {\n        title: '分类的名称',\n        dataIndex: 'name'//显示数据对应的名称\n      },\n      {\n        title: '操作',\n        width: 300,\n        render: (category) => (\n          <span>\n            {\n              this.state.flag ? <LinkButton onClick={() => this.showUpdate(category)}>修改分类</LinkButton> : null\n            }\n            {\n              this.state.parentId === '0' ?\n                <LinkButton onClick={() => this.showSubCategorys(category)}>查看子分类</LinkButton> : null\n            }\n          </span>\n        )\n      }\n    ]\n  }\n  //异步获取分类列表\n  getCategorys = async (parentId) => {\n    //  请求前\n    this.setState({loading: true})\n    parentId = parentId || this.state.parentId\n    //  发送ajax请求\n    const result = await reqCategorys(parentId)\n\n    //  请求后\n    this.setState({loading: false})\n\n    if (result.status === 0) {\n      const categorys = result.data\n      // console.log(result.data);\n      if (parentId === '0') {\n        this.setState({categorys})\n      } else {\n        this.setState({subCategorys: categorys})\n      }\n    } else {\n      message.error('获取列表失败。。')\n    }\n  }\n\n  //显示指定对象二级列表\n  showSubCategorys = (category) => {\n    //更新状态\n    this.setState({\n      parentId: category._id,\n      parentName: category.name\n    }, () => {\n      this.getCategorys()\n      console.log('parentId', this.state.parentId);\n    })\n\n    // console.log('parentId',this.state.parentId);\n    //获取二级分类列表\n    // this.getCategorys()\n  }\n\n  //显示一级列表\n  showCategorys = () => {\n    this.setState({\n      parentId: '0',\n      parentName: '',\n      subCategorys: []\n    })\n  }\n\n  //点击取消\n  handleCancel = () => {\n    //清空数据\n    this.form.resetFields()\n\n    this.setState({\n      showStatus: 0\n    })\n  }\n\n  //显示添加\n  showAdd = () => {\n    this.setState({\n      showStatus: 1\n    })\n  }\n\n  //添加分类\n  addCategory = () => {\n    console.log('addCategory()');\n\n    this.form.validateFields(async (err, values) => {\n      if (!err) {\n        //  隐藏确定框\n        this.setState({\n          showStatus: 0\n        })\n\n        //搜集数据\n        const {parentId, categoryName} = this.form.getFieldsValue()\n        //清空数据\n        this.form.resetFields()\n\n        const result = await reqAddCategory(categoryName, parentId)\n        if (result.status === 0) {\n\n          //  添加的分类就是当前分类列表\n          if (parentId === this.state.parentId) {\n            //  重新获取列表\n            this.getCategorys()\n          } else if (parentId === '0') {\n            this.getCategorys('0')\n          }\n        }\n      }\n    })\n  }\n\n  //显示更新\n  showUpdate = (category) => {\n    this.category = category\n\n    this.setState({\n      showStatus: 2\n    })\n  }\n\n  //更新分类\n  updateCategory = () => {\n    console.log('updateCategory()');\n\n    //进行表但验证\n    this.form.validateFields(async (err, values) => {\n      if (!err) {\n        //  隐藏确定框\n        this.setState({\n          showStatus: 0\n        })\n        //  准备数据\n        const categoryId = this.category._id\n        const {categoryName} = values\n\n        //清空数据\n        this.form.resetFields()\n\n        //  发请求更新\n        const result = await reqUpdateCategory({categoryId, categoryName})\n        if (result.status === 0) {\n          //  重新显示列表\n          this.getCategorys()\n        }\n      }\n    })\n  }\n\n  //第一次记载前初始化\n  componentWillMount() {\n    this.initColumns()\n    const user = memoryUtil.user\n    const flag = user.role.menus.includes('/role')\n    this.setState({\n      flag\n    })\n  }\n\n  //加载完成后获取数据\n  componentDidMount() {\n    this.getCategorys()\n  }\n\n  render() {\n\n    //读取状态\n    const {loading, categorys, subCategorys, parentId, parentName, showStatus, flag} = this.state\n\n\n\n    // console.log(user.role.menus.indexOf('/123'));\n\n\n    // const flag1 = user.role.menus.includes('/role')\n\n\n\n\n    //读取状态\n    const category = this.category || {}\n\n    const title = parentId === '0' ? '一级分类列表' : (\n      <span>\n        <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\n        <Icon type='arrow-right' style={{marginRight: 5}}/>\n        <span>{parentName}</span>\n      </span>\n    )\n\n    const extra = (\n      <Button type='primary' onClick={this.showAdd}>\n        <Icon type='plus'/>\n        添加\n      </Button>\n    )\n\n    return (\n      <Card title={title} extra={extra}>\n        <Table\n          rowKey='_id'\n          bordered\n          loading={loading}\n          columns={this.columns}\n          dataSource={parentId === '0' ? categorys : subCategorys}\n          pagination={{defaultPageSize: 5, showQuickJumper: true}}\n        />\n\n        <Modal\n          title=\"添加分类\"\n          visible={showStatus === 1}\n          onOk={this.addCategory}\n          onCancel={this.handleCancel}\n        >\n\n          <AddForm\n            categorys={categorys}\n            parentId={parentId}\n            setForm={(form) => {\n              this.form = form\n            }}\n          />\n        </Modal>\n\n        <Modal\n          title=\"更新分类\"\n          visible={showStatus === 2}\n          onOk={this.updateCategory}\n          onCancel={this.handleCancel}\n        >\n\n          <UpdateForm\n            categoryName={category.name}\n            setForm={(form) => {\n              this.form = form\n            }}\n          />\n        </Modal>\n      </Card>\n    )\n  }\n}\n","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\charts\\bar.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\product\\product.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\charts\\line.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\user\\user.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\role\\role.jsx",["353"],"import React, {Component} from 'react'\nimport {\n  Card,\n  Button,\n  Table,\n  Modal,\n  message\n} from 'antd'\nimport {connect} from 'react-redux'\n\nimport {PAGE_SIZE} from '../../utils/constants'\nimport {reqRoles, reqAddRole, reqUpdateRole} from '../../api'\nimport AddForm from \"./add-form\";\nimport AuthForm from './auth-form'\nimport {formateDate} from '../../utils/dataUtils'\nimport storageUtils from \"../../utils/storageUtils\";\nimport {logout} from \"../../redux/actions\";\n\nclass Role extends Component {\n  state = {\n    roles: [],  //所有角色列表\n    role: {},  //选中的role\n    isShowAdd: false,//是否显示添加界面\n    isShowAuth: false,//是否显示更新界面\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.auth = React.createRef()\n  }\n\n  /**\n   * 初始化列\n   */\n  initColumn = () => {\n    this.columns = [\n      {\n        title: '角色名称',\n        dataIndex: 'name'\n      },\n      {\n        title: '创建时间',\n        dataIndex: 'create_time',\n        render: formateDate\n      },\n      {\n        title: '授权时间',\n        dataIndex: 'auth_time',\n        render: (auth_time) => formateDate(auth_time)\n      },\n      {\n        title: '授权人',\n        dataIndex: 'auth_name'\n      },\n    ]\n    // console.log(this.state.roles[0].name, this.state.roles[0].create_time);\n    // console.log(this.state.roles[0].auth_name, this.state.roles[0].auth_time);\n  }\n\n  onRow = (role) => {\n    return {\n      onClick: event => {\n        // alert('点击行')\n        // console.log(role);\n        this.setState({\n          role\n        })\n      }\n    }\n  }\n\n  /**\n   * 获取前台列表roles\n   */\n  getRoles = async () => {\n    const result = await reqRoles()\n    if (result.status === 0) {\n      const roles = result.data\n      this.setState({\n        roles\n      })\n    }\n  }\n\n  /**\n   * 添加角色\n   */\n  addRole = () => {\n    //表单验证\n    this.form.validateFields(async (err, values) => {\n      if (!err) {\n        //隐藏确认框\n        this.setState({\n          isShowAdd: false\n        })\n\n        //  收集数据\n        const {roleName} = values\n        this.form.resetFields()\n        //  添加角色\n        const result = await reqAddRole(roleName)\n        //  更新列表\n        if (result.status === 0) {\n          message.success('角色添加成功')\n          const role = result.data\n\n          //  更新role状态：基于原本数据\n          this.setState(state => ({\n            roles: [...state.roles, role]\n          }))\n\n        } else {\n          message.error('角色添加失败')\n        }\n      }\n    })\n  }\n\n  /**\n   * 更新角色\n   */\n  updateRole = async () => {\n    // 隐藏确认框\n    this.setState({\n      isShowAuth: false\n    })\n    const role = this.state.role\n    //  得到menus\n    const menus = this.auth.current.getMenus()\n    role.menus = menus\n    role.auth_time = Date.now()\n    role.auth_name = this.props.user.username\n\n    //  请求更新\n    const result = await reqUpdateRole(role)\n    if (result.status === 0) {\n      if (role._id === this.props.user.role_id) {\n        this.props.logout()\n        message.success('强制退出重新登录')\n      } else {\n        message.success('角色权限更新成功')\n        this.setState({\n          roles: [...this.state.roles]\n        })\n      }\n    } else {\n      message.error('添加角色失败')\n    }\n  }\n\n  componentWillMount() {\n    this.initColumn()\n  }\n\n  componentDidMount() {\n    this.getRoles()\n  }\n\n  render() {\n    const {roles, role, isShowAdd, isShowAuth} = this.state\n\n    const title = (\n      <span>\n        <Button\n          type='primary'\n          style={{marginRight: '10px'}}\n          onClick={() => this.setState({isShowAdd: true})}\n        >\n          创建角色\n        </Button>\n        <Button\n          type='primary'\n          disabled={!role._id}\n          onClick={() => this.setState({isShowAuth: true})}\n        >\n          设置角色权限\n        </Button>\n      </span>\n    )\n    return (\n      <Card title={title}>\n        <Table\n          bordered\n          rowKey='_id'\n          dataSource={roles}\n          columns={this.columns}\n          pagination={{defaultPageSize: PAGE_SIZE}}\n          rowSelection={{\n            type: 'radio',\n            selectedRowKeys: [role._id],\n            onSelect: (role) => {\n              this.setState({role})\n            }\n          }}\n          onRow={this.onRow}\n        />\n\n        <Modal\n          title=\"添加角色\"\n          visible={isShowAdd}\n          onOk={this.addRole}\n          onCancel={() => {\n            this.setState({isShowAdd: false})\n          }}\n        >\n\n          <AddForm\n            setForm={(form) => {\n              this.form = form\n            }}\n          />\n        </Modal>\n\n        <Modal\n          title=\"设置角色权限\"\n          visible={isShowAuth}\n          onOk={this.updateRole}\n          onCancel={() => {\n            this.setState({isShowAuth: false})\n          }}\n        >\n\n          <AuthForm ref={this.auth} role={role}/>\n        </Modal>\n      </Card>\n    )\n  }\n}\n\nexport default connect(\n  state => ({user: state.user}),\n  {logout}\n)(Role)\n","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\charts\\pie.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\not-found\\not-found.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\components\\left-nav\\left-nav.jsx",["354"],"import React, {Component} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport {Menu, Icon} from 'antd'\nimport {connect} from 'react-redux'\n\nimport './left-nav.less'\nimport logo from '../../assets/images/logo1.jpg'\nimport menuList from '../../config/menuConfig'\nimport {setHeadTitle} from '../../redux/actions'\n\nconst SubMenu = Menu.SubMenu;\n\nclass LeftNav extends Component {\n\n  getMenuNodes = (menuList) => {\n    const path = this.props.location.pathname\n\n    return menuList.map(item => {\n      // 如果当前用户有item对应的权限, 才需要显示对应菜单项\n      if (this.hasAuth(item)) {\n        if (!item.children) {\n          if (item.key === path || path.indexOf(item.key) === 0) {\n            //更新headTitle状态\n            this.props.setHeadTitle(item.title)\n          }\n          return (\n            <Menu.Item key={item.key}>\n              <Link to={item.key} onClick={() => this.props.setHeadTitle(item.title)}>\n                <Icon type={item.icon}></Icon>\n                <span>{item.title}</span>\n              </Link>\n            </Menu.Item>\n          )\n        } else {\n          // 查找一个与当前请求路径匹配的子Item\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0)\n          // 如果存在, 说明当前item的子列表需要打开\n          if (cItem) {\n            this.openKey = item.key\n          }\n          return (\n            <SubMenu\n              key={item.key}\n              title={\n                <span>\n                <Icon type={item.icon}></Icon>\n                <span>{item.title}</span>\n              </span>\n              }\n            >\n              {this.getMenuNodes(item.children)}\n            </SubMenu>\n          )\n        }\n      }\n    })\n  }\n\n  /**\n   * 查询item是否有权限\n   */\n  hasAuth = (item) => {\n    const {key, isPublic} = item\n\n    const menus = this.props.user.role.menus\n    const username = this.props.user.username\n\n    // 1. 如果当前用户是admin\n    // 2. 如果当前item是公开的\n    // 3. 当前用户有此item的权限: key有没有menus中\n\n    if (username === 'admin' || isPublic || menus.indexOf(key) !== -1) {\n      return true\n    } else if (item.children) { // 4. 如果当前用户有此item的某个子item的权限\n      return !!item.children.find(child => menus.indexOf(child.key) !== -1)\n    }\n\n    return false\n  }\n\n  componentWillMount() {\n    this.menuNodes = this.getMenuNodes(menuList)\n  }\n\n  render() {\n    let path = this.props.location.pathname\n\n    if (path.indexOf('/product') === 0) { // 当前请求的是商品或其子路由界面\n      path = '/product'\n    }\n\n    // 得到需要打开菜单项的key\n    const openKey = this.openKey\n    return (\n      <div className='left-nav'>\n        <Link to='/' className='left-nav-header'>\n          <img src={logo} alt=\"logo\"/>\n          <h1>校园杂货</h1>\n        </Link>\n        <Menu\n          mode='inline'\n          theme='dark'\n          selectedKeys={[path]}\n          defaultOpenKeys={[openKey]}\n        >\n          {\n            this.menuNodes\n          }\n\n        </Menu>\n      </div>\n    )\n  }\n}\n\n/*\n* withRouter\n* 包装非路由组件获取三个值   history location match\n* */\nexport default connect(\n  state => ({user:state.user}),\n  {setHeadTitle}\n)(withRouter(LeftNav))\n","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\components\\header\\header.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\utils\\dataUtils.js",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\utils\\constants.js",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\config\\menuConfig.js",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\category\\update-form.jsx",["355"],"import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Form,\n  Select,\n  Input\n} from 'antd'\n\nconst Item = Form.Item\nconst Option = Select.Option\n\nclass UpdateForm extends Component {\n  static propTypes = {\n    categoryName: PropTypes.string.isRequired,\n    setForm: PropTypes.func.isRequired\n  }\n\n  componentWillMount() {\n    this.props.setForm(this.props.form)\n  }\n\n  render() {\n    const {categoryName} = this.props\n    const {getFieldDecorator} = this.props.form\n\n    return (\n      <Form>\n        <Item>\n          {\n            getFieldDecorator('categoryName', {\n              initialValue: categoryName,\n              rules: [\n                {required: true,message:'名称必须输入'}\n              ]\n            })(\n              <Input placeholder='请输入分类名称'/>\n            )\n          }\n        </Item>\n      </Form>\n    )\n  }\n}\n\nexport default Form.create()(UpdateForm)\n","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\category\\add-form.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\product\\home.jsx",["356"],"import React, {Component} from 'react'\n\nimport {\n  Card,\n  Select,\n  Input,\n  Button,\n  Icon,\n  Table,\n  message,\n  Modal\n} from 'antd'\nimport LinkButton from \"../../components/link-button/link-button\";\nimport {reqProducts, reqSearchProducts, reqAddCartProduct, reqDeleteProduct, reqDeleteUser} from \"../../api\";\nimport {PAGE_SIZE} from \"../../utils/constants\";\nimport memoryUtil from \"../../utils/memoryUtil\";\n\nconst Option = Select.Option\n\n/*\nProduct的添加和更新的子路由组件\n */\nexport default class ProductHome extends Component {\n  state = {\n    total: 0,  //默认初始数量\n    products: [],\n    loading: false, //加载中\n    searchType: 'productName',//搜索的类型\n    searchName: '',  //搜索的名称\n    flag: true  //判断权限\n  }\n\n  initColumns = () => {\n    this.columns = [\n      {\n        title: '商品名称',\n        dataIndex: 'name',\n      },\n      {\n        title: '商品描述',\n        dataIndex: 'desc',\n      },\n      {\n        title: '价格',\n        dataIndex: 'price',\n        render: (price) => '￥' + price  //指定显示的值的样式\n      },\n      {\n        title: '添加',\n        width: 100,\n        // dataIndex: 'status',\n        render: (product) => {\n          // const {status, _id} = product\n          return (\n            <span>\n              <Button\n                type='primary'\n                onClick={() => this.addCart(product)}\n              >\n                购物车\n              </Button>\n            </span>\n          )\n        }\n      },\n      {\n        title: '操作',\n        width: 100,\n        render: (product) => {\n          return (\n            <span>\n              <LinkButton onClick={() => this.showDetail(product)}>详情</LinkButton>\n              {\n                this.state.flag ? <LinkButton onClick={() => this.showUpdate(product)}>修改</LinkButton> : null\n\n              }\n              {\n                this.state.flag ? <LinkButton onClick={() => this.deleteProduct(product)}>删除</LinkButton> : null\n\n              }\n            </span>\n          )\n        }\n      },\n    ];\n  }\n\n  /**\n   * 显示商品详情页面\n   * @param product\n   */\n  showDetail = (product) => {\n    //使用缓存product对象给detail使用\n    memoryUtil.product = product\n    this.props.history.push('/product/detail')\n  }\n  /**\n   * 显示修改产品界面\n   * @param product\n   */\n  showUpdate = (product) => {\n    //使用缓存product对象给detail使用\n    memoryUtil.product = product\n    this.props.history.push('/product/addupdate')\n  }\n\n  /**\n   * 删除指定商品\n   */\n  deleteProduct=async (product)=>{\n    Modal.confirm({\n      title: `确认删除${product.name}吗?`,\n      onOk: async () => {\n        const result=await reqDeleteProduct(product._id)\n        if(result.status===0){\n          message.success(\"商品删除成功\")\n          this.getProducts(this.pageNum)\n        }\n      }\n    })\n  }\n\n  /**\n   * 获取指定页码的列表数据\n   */\n  getProducts = async (pageNum) => {\n    this.pageNum = pageNum  //保存页面让其他方法可以使用\n\n    //发请求  中\n    this.setState({\n      loading: true\n    })\n\n    const {searchName, searchType} = this.state\n\n    let result\n    //关键字搜索  搜索分页\n    if (searchName) {\n      result = await reqSearchProducts({pageNum, pageSize: PAGE_SIZE, searchName, searchType})\n    } else {//一般分页\n      result = await reqProducts(pageNum, PAGE_SIZE)\n    }\n    //请求结束\n    this.setState({\n      loading: false\n    })\n    if (result.status === 0) {\n      const {total, list} = result.data\n      this.setState({\n        total,\n        products: list\n      })\n    }\n  }\n\n  //更新商品状态\n  addCart = async (product) => {\n    // memoryUtil.user.shoppingCart.push(product)\n    const username = memoryUtil.user.username\n\n    const result = await reqAddCartProduct(product, username)\n\n    if (result.status === 0) {\n      message.success('添加购物车成功')\n      // console.log(result.data);\n    }\n    // console.log(\"添加购物车\", product)\n    // console.log(memoryUtil.user.shoppingCart);\n  }\n\n  componentWillMount() {\n    this.initColumns()\n    const user = memoryUtil.user\n    const flag = user.role.menus.includes('/role')\n    this.setState({\n      flag\n    })\n  }\n\n  componentDidMount() {\n    this.getProducts(1)\n  }\n\n  render() {\n\n    const {products, total, loading, searchName, searchType} = this.state\n\n    // console.log(products);\n\n    const title = (\n      <span>\n        <Select\n          value={searchType}\n          style={{width: 150}}\n          onChange={value => this.setState({searchType: value})}\n        >\n          <Option value='productName'>按名称搜索</Option>\n          <Option value='productDesc'>按描述搜索</Option>\n        </Select>\n        <Input\n          placeholder='关键字'\n          style={{width: 150, margin: '0 15px'}}\n          value={searchName}\n          onChange={e => this.setState({searchName: e.target.value})}\n        />\n        <Button type='primary' onClick={() => this.getProducts(1)}>搜索</Button>\n      </span>\n    )\n\n    const extra = (\n      <Button type='primary' onClick={() => this.props.history.push('/product/addupdate')}>\n        <Icon type='plus'></Icon>\n        添加商品\n      </Button>\n    )\n\n    return (\n      <Card title={title} extra={extra}>\n        <Table\n          rowKey='_id'\n          bordered\n          loading={loading}\n          dataSource={products}\n          columns={this.columns}\n          pagination={{\n            current: this.pageNum,\n            defaultPageSize: PAGE_SIZE,\n            showQuickJumper: true,\n            total,\n            onChange: this.getProducts\n          }}\n        />\n      </Card>\n    )\n  }\n}\n","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\product\\add-update.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\product\\detail.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\utils\\memoryUtil.js",["357"],"/*\n用来在内存保存一些数据的工具模块\n */\nexport default {\n  user: {} , //保存当前的user\n  product:{}  //保存指定商品对象\n}\n","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\role\\auth-form.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\components\\link-button\\link-button.jsx",["358"],"import React, {Component} from 'react'\nimport './link-button.less'\n\nexport default function LinkButton(props) {\n  return <button {...props} className='link-button'></button>\n}\n","C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\role\\add-form.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\api\\index.js",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\user\\user-form.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\api\\ajax.js",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\product\\pictures-wall.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\product\\rich-text-editor.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\cart\\cart.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\cart\\pathCart.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\项目\\reactproject2-master\\reactproject2-master\\react-admin-client\\src\\pages\\cart\\cartPay.jsx",["359","360"],"import React, {PureComponent} from 'react'\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Form,\r\n  Input,\r\n  List,\r\n  Cascader,\r\n  Button,\r\n  message,\r\n  Modal,\r\n  version\r\n} from 'antd'\r\nimport moment from \"moment\";\r\n\r\nimport LinkButton from \"../../components/link-button/link-button\";\r\nimport memoryUtil from \"../../utils/memoryUtil\";\r\nimport {reqDeleteCartProduct} from \"../../api\";\r\nimport provinces from \"china-division/dist/provinces.json\";\r\nimport cities from \"china-division/dist/cities.json\";\r\nimport areas from \"china-division/dist/areas.json\";\r\nimport {BASE_IMG_URL} from \"../../utils/constants\";\r\n\r\nimport './cartPay.less'\r\n\r\nconst {Item} = Form\r\n\r\nconsole.log(provinces, cities, areas);\r\n/*\r\nProduct的默认子路由组件\r\n */\r\n\r\nareas.forEach((area) => {\r\n  const matchCity = cities.filter((city) => city.code === area.cityCode)[0];\r\n  if (matchCity) {\r\n    matchCity.children = matchCity.children || [];\r\n    matchCity.children.push({\r\n      label: area.name,\r\n      value: area.code\r\n    });\r\n  }\r\n});\r\n\r\ncities.forEach((city) => {\r\n  const matchProvince = provinces.filter(\r\n    (province) => province.code === city.provinceCode\r\n  )[0];\r\n  if (matchProvince) {\r\n    matchProvince.children = matchProvince.children || [];\r\n    matchProvince.children.push({\r\n      label: city.name,\r\n      value: city.code,\r\n      children: city.children\r\n    });\r\n  }\r\n});\r\n\r\n//省级名称\r\nconst options = provinces.map(province => ({\r\n  label: province.name,\r\n  value: province.code,\r\n  children: province.children\r\n}));\r\n\r\nclass cartPay extends PureComponent {\r\n\r\n  submit = () => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        //获取商品\r\n        const {product} = this.props.location.query\r\n        //获取用户信息\r\n        const username = memoryUtil.user.username\r\n        Modal.confirm({\r\n          title: `确认支付${product.name}吗?`,\r\n          onOk: async () => {\r\n            const result = await reqDeleteCartProduct(product._id, username)\r\n            if (result.status === 0) {\r\n              message.success('商品支付成功')\r\n              this.props.history.replace('/cart')\r\n            }\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    //设置返回\r\n    const title = (\r\n      <span>\r\n        <LinkButton onClick={() => this.props.history.goBack()}>\r\n          <Icon type='arrow-left' style={{fontSize: 20, marginRight: 10}}></Icon>\r\n        </LinkButton>\r\n        <span>商品支付</span>\r\n      </span>\r\n    )\r\n\r\n    //定义Item宽度\r\n    const formItemLayout = {\r\n      labelCol: {span: 2},  //左侧宽度\r\n      wrapperCol: {span: 8},  //右侧宽度\r\n    }\r\n\r\n    //获取用户信息\r\n    const user = memoryUtil.user\r\n\r\n    //定义Form格式\r\n    const {getFieldDecorator} = this.props.form\r\n\r\n    //接受传过来的商品\r\n    const {product} = this.props.location.query\r\n    const {name, price, desc, imgs} = product\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Form {...formItemLayout}>\r\n          <Item label='用户名'>\r\n            {\r\n              getFieldDecorator('username', {\r\n                initialValue: user.username,\r\n                rules: [\r\n                  {required: true, message: '必须输入用户名称'}\r\n                ]\r\n              })(<Input placeholder='请输入用户名称'/>)\r\n            }\r\n          </Item>\r\n          <Item label='联系电话'>\r\n            {\r\n              getFieldDecorator('phone', {\r\n                initialValue: user.phone,\r\n                rules: [\r\n                  {required: true, message: '必须输入联系方式'}\r\n                ]\r\n              })(<Input placeholder='请输入联系方式'/>)\r\n            }\r\n          </Item>\r\n          <Item label='送货地址'>\r\n            {\r\n              getFieldDecorator('address', {\r\n                rules: [\r\n                  {required: true, message: '必须选择交易地址'}\r\n                ]\r\n              })(<Cascader\r\n                options={options}\r\n                showSearch\r\n                placeholder=\"请选择地址\"\r\n                style={{width: 400}}\r\n              />)\r\n            }\r\n          </Item>\r\n          <Item label='详细地址'>\r\n            {\r\n              getFieldDecorator('detailAddress', {\r\n                rules: [\r\n                  {required: true, message: '必须输入详细地址'}\r\n                ]\r\n              })(<Input placeholder='请输入详细地址'/>)\r\n            }\r\n          </Item>\r\n        </Form>\r\n        <List>\r\n          <Item style={{marginLeft:'30px'}}>{name}&nbsp;&nbsp;&nbsp;&nbsp;{desc}&nbsp;&nbsp;&nbsp;&nbsp;<span style={{color: \"red\", fontSize: '20px'}}>{price}</span></Item>\r\n          <Item style={{width:'200px',marginLeft:'30px'}} >\r\n              {\r\n                imgs.map(img => (\r\n                  <img\r\n                    key={img}\r\n                    src={BASE_IMG_URL + img}\r\n                    className=\"product-img\"\r\n                    alt=\"img\"\r\n                  />\r\n                ))\r\n              }\r\n          </Item>\r\n        </List>\r\n        <Item>\r\n          <Button type='primary' onClick={this.submit}>确认支付</Button>\r\n        </Item>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(cartPay)\r\n\r\n\r\n/*\r\n1. 子组件调用父组件的方法: 将父组件的方法以函数属性的形式传递给子组件, 子组件就可以调用\r\n2. 父组件调用子组件的方法: 在父组件中通过ref得到子组件标签对象(也就是组件对象), 调用其方法\r\n */\r\n\r\n/*\r\n使用ref\r\n1. 创建ref容器: thi.pw = React.createRef()\r\n2. 将ref容器交给需要获取的标签元素: <PictureWall ref={this.pw} />\r\n3. 通过ref容器读取标签元素: this.pw.current\r\n */\r\n",{"ruleId":"361","replacedBy":"362"},{"ruleId":"363","replacedBy":"364"},{"ruleId":"365","severity":1,"message":"366","line":3,"column":9,"nodeType":"367","messageId":"368","endLine":3,"endColumn":22},{"ruleId":"365","severity":1,"message":"369","line":8,"column":3,"nodeType":"367","messageId":"368","endLine":8,"endColumn":10},{"ruleId":"365","severity":1,"message":"370","line":72,"column":11,"nodeType":"367","messageId":"368","endLine":72,"endColumn":19},{"ruleId":"371","severity":1,"message":"372","line":4,"column":1,"nodeType":"373","endLine":7,"endColumn":2},{"ruleId":"371","severity":1,"message":"372","line":8,"column":1,"nodeType":"373","endLine":28,"endColumn":2},{"ruleId":"365","severity":1,"message":"374","line":9,"column":8,"nodeType":"367","messageId":"368","endLine":9,"endColumn":18},{"ruleId":"375","severity":1,"message":"376","line":19,"column":30,"nodeType":"377","messageId":"378","endLine":19,"endColumn":32},{"ruleId":"365","severity":1,"message":"379","line":16,"column":8,"nodeType":"367","messageId":"368","endLine":16,"endColumn":20},{"ruleId":"365","severity":1,"message":"380","line":1,"column":16,"nodeType":"367","messageId":"368","endLine":1,"endColumn":25},{"ruleId":"365","severity":1,"message":"381","line":10,"column":7,"nodeType":"367","messageId":"368","endLine":10,"endColumn":13},{"ruleId":"365","severity":1,"message":"382","line":151,"column":11,"nodeType":"367","messageId":"368","endLine":151,"endColumn":21},{"ruleId":"361","replacedBy":"383"},{"ruleId":"363","replacedBy":"384"},{"ruleId":"365","severity":1,"message":"366","line":3,"column":9,"nodeType":"367","messageId":"368","endLine":3,"endColumn":22},{"ruleId":"365","severity":1,"message":"369","line":8,"column":3,"nodeType":"367","messageId":"368","endLine":8,"endColumn":10},{"ruleId":"365","severity":1,"message":"370","line":72,"column":11,"nodeType":"367","messageId":"368","endLine":72,"endColumn":19},{"ruleId":"371","severity":1,"message":"372","line":8,"column":1,"nodeType":"373","endLine":28,"endColumn":2},{"ruleId":"365","severity":1,"message":"385","line":205,"column":80,"nodeType":"367","messageId":"368","endLine":205,"endColumn":84},{"ruleId":"365","severity":1,"message":"379","line":16,"column":8,"nodeType":"367","messageId":"368","endLine":16,"endColumn":20},{"ruleId":"375","severity":1,"message":"376","line":18,"column":30,"nodeType":"377","messageId":"378","endLine":18,"endColumn":32},{"ruleId":"365","severity":1,"message":"381","line":10,"column":7,"nodeType":"367","messageId":"368","endLine":10,"endColumn":13},{"ruleId":"365","severity":1,"message":"386","line":14,"column":78,"nodeType":"367","messageId":"368","endLine":14,"endColumn":91},{"ruleId":"371","severity":1,"message":"372","line":4,"column":1,"nodeType":"373","endLine":7,"endColumn":2},{"ruleId":"365","severity":1,"message":"380","line":1,"column":16,"nodeType":"367","messageId":"368","endLine":1,"endColumn":25},{"ruleId":"365","severity":1,"message":"387","line":12,"column":3,"nodeType":"367","messageId":"368","endLine":12,"endColumn":10},{"ruleId":"365","severity":1,"message":"388","line":14,"column":8,"nodeType":"367","messageId":"368","endLine":14,"endColumn":14},"no-native-reassign",["389"],"no-negated-in-lhs",["390"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'message' is defined but never used.","'errorMsg' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'memoryUtil' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'storageUtils' is defined but never used.","'Component' is defined but never used.","'Option' is assigned a value but never used.","'dataSource' is assigned a value but never used.",["389"],["390"],"'flag' is assigned a value but never used.","'reqDeleteUser' is defined but never used.","'version' is defined but never used.","'moment' is defined but never used.","no-global-assign","no-unsafe-negation"]